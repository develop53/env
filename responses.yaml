valid-for-minute:
  body: "This response will stay fresh for one minute"
  headers:
    cache-control: "max-age=60"
    custom-header: "any value"

private:
  body: "This is a private response, it will not be cached by shared caches"
  headers:
    cache-control: "private"   

no-cache:
  body: "This response must be validated every time"
  headers:
    cache-control: "no-cache"    


kubernetes	28.1.0 veya 29.0.0 (stabil)
openshift	0.13.2 (şu an güncel/stabil)
pyyaml	6.0.1 (stabil)
requests	2.31.0 (güncel stabil)
urllib3	2.0.7 (requests ile uyumlu)
ansible-core	2.15.9 veya 2.16.5
ansible-runner	2.3.6 (güncel/stabil)
Jinja2	3.1.3
cryptography	41.0.7 (stabil/güvenli)
jsonpatch	1.33
websocket-client	1.7.0 (kubernetes modülü için)
six	1.16.0
certifi	2024.2.2 (SSL için önemli)
setuptools	69.2.0 (güncel stabil)

COPY pip.conf /etc/pip.conf
RUN python3 -m pip install --upgrade pip && \
    python3 -m pip install kubernetes openshift pyyaml requests
---
FROM quay.io/ansible/awx-ee:latest

USER root
RUN dnf install -y python3.9 python3.9-pip && \
    alternatives --set python3 /usr/bin/python3.9 && \
    python3 -m pip install --upgrade pip

COPY pip.conf /etc/pip.conf

RUN python3 -m pip install kubernetes==29.0.0
RUN python3 -m pip install openshift==0.13.2
RUN python3 -m pip install pyyaml==6.0.1
RUN python3 -m pip install requests==2.31.0
RUN ansible-galaxy collection install kubernetes.core

USER 1000    

----------




 Örnek Entegrasyon Yöntemi (PHPIPAM → CoreDNS)
1. CoreDNS üzerinde hosts veya etcd plugin'ini etkinleştir:

CoreDNS, dinamik DNS kayıtlarını aşağıdaki pluginlerle destekler:

hosts: statik dosyadan yükler, reload yapılabilir.

etcd: Etcd’ye bağlanıp dinamik DNS sunar.

file: Statik zone dosyası (otomatik reload destekli).

Örneğin basitlik açısından hosts veya file kullanmak idealdir.

CoreDNS örnek konfigurasyonu (Corefile):
example.com {
    hosts /etc/coredns/custom.hosts {
        reload 5s
        fallthrough
    }
    forward . 8.8.8.8
    log
}
Burada custom.hosts dosyası her 5 saniyede bir yenilenir.

2. PHPIPAM API ile DNS kayıtlarını otomatik çekip host dosyasına yazan basit script yazılır:

import requests
import time

PHPIPAM_API = "http://<phpipam-api>/api"
TOKEN = "PHPIPAM_API_TOKEN"
APP_ID = "<app-id>"
SUBNET_ID = "<subnet-id>"

HEADERS = {"token": TOKEN}

def fetch_ips():
    resp = requests.get(f"{PHPIPAM_API}/{APP_ID}/subnets/{SUBNET_ID}/addresses/", headers=HEADERS)
    return resp.json()['data']

def update_hosts_file():
    ips = fetch_ips()
    lines = []
    for ip in ips:
        hostname = ip.get('hostname')
        address = ip.get('ip')
        if hostname and address:
            lines.append(f"{address}\t{hostname}.example.com\n")

    with open("/etc/coredns/custom.hosts", "w") as f:
        f.writelines(lines)
    print("Hosts dosyası güncellendi.")

if __name__ == "__main__":
    while True:
        update_hosts_file()
        time.sleep(60)  # her dakika çalıştır
Bu script her dakika PHPIPAM'den subnetindeki tüm IP’leri ve hostname’leri alır, CoreDNS’in hosts dosyasını günceller.

CoreDNS bu dosyayı otomatik yeniden yükleyerek DNS kayıtlarını sunar.
